// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSJD.DataAccess;

#nullable disable

namespace SSJD.DataAccess.Migrations
{
    [DbContext(typeof(SSJDDbContext))]
    partial class SSJDDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Contract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 892, DateTimeKind.Local).AddTicks(9923));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 897, DateTimeKind.Local).AddTicks(7138));

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("LevelID")
                        .IsUnique();

                    b.HasIndex("PositionID")
                        .IsUnique();

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int?>("LevelID1")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(15);

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<int?>("PositionID1")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID1")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.HasIndex("LevelID")
                        .IsUnique();

                    b.HasIndex("LevelID1");

                    b.HasIndex("PositionID")
                        .IsUnique();

                    b.HasIndex("PositionID1");

                    b.HasIndex("RoleID")
                        .IsUnique();

                    b.HasIndex("RoleID1");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Level", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Level", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.GeneralEnity.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordCheck")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.GeneralEntity.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberCardID")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(15);

                    b.Property<int>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.HasIndex("MemberCardID")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.MemberCard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MemberClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MemberCard");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 912, DateTimeKind.Local).AddTicks(6470));

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ShippingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 913, DateTimeKind.Local).AddTicks(2096));

                    b.Property<int>("ShippingUnitID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ShippingUnitID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.OrderDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.HasIndex("PromotionID")
                        .IsUnique();

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.HasIndex("CategoryID")
                        .IsUnique();

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.ProductDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdditionalImage")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Warranty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 918, DateTimeKind.Local).AddTicks(8250));

                    b.HasKey("ID");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("ProductDetail", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Promotion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 919, DateTimeKind.Local).AddTicks(1389));

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 1, 3, 0, 21, 44, 919, DateTimeKind.Local).AddTicks(1683));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PercentDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.UnitShip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UnitShip");
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Contract", b =>
                {
                    b.HasOne("SSJD.Entities.EmployeeEntity.Employee", "Employee")
                        .WithMany("Contract")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.EmployeeEntity.Level", "Level")
                        .WithOne("Contract")
                        .HasForeignKey("SSJD.Entities.EmployeeEntity.Contract", "LevelID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.EmployeeEntity.Position", "Position")
                        .WithOne("Contract")
                        .HasForeignKey("SSJD.Entities.EmployeeEntity.Contract", "PositionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Level");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Employee", b =>
                {
                    b.HasOne("SSJD.Entities.GeneralEnity.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("SSJD.Entities.EmployeeEntity.Employee", "AccountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.EmployeeEntity.Level", "Level")
                        .WithOne("Employee")
                        .HasForeignKey("SSJD.Entities.EmployeeEntity.Employee", "LevelID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.EmployeeEntity.Level", null)
                        .WithMany("Employees")
                        .HasForeignKey("LevelID1");

                    b.HasOne("SSJD.Entities.EmployeeEntity.Position", "Position")
                        .WithOne("Employee")
                        .HasForeignKey("SSJD.Entities.EmployeeEntity.Employee", "PositionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.EmployeeEntity.Position", null)
                        .WithMany("Employees")
                        .HasForeignKey("PositionID1");

                    b.HasOne("SSJD.Entities.GeneralEntity.Role", "Role")
                        .WithOne("Employee")
                        .HasForeignKey("SSJD.Entities.EmployeeEntity.Employee", "RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.GeneralEntity.Role", null)
                        .WithMany("Employees")
                        .HasForeignKey("RoleID1");

                    b.Navigation("Account");

                    b.Navigation("Level");

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Customer", b =>
                {
                    b.HasOne("SSJD.Entities.GeneralEnity.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("SSJD.Entities.StoreEntity.Customer", "AccountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.StoreEntity.MemberCard", "MemberCard")
                        .WithOne("Customer")
                        .HasForeignKey("SSJD.Entities.StoreEntity.Customer", "MemberCardID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("MemberCard");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Order", b =>
                {
                    b.HasOne("SSJD.Entities.StoreEntity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.StoreEntity.UnitShip", "UnitShip")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingUnitID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("UnitShip");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.OrderDetail", b =>
                {
                    b.HasOne("SSJD.Entities.StoreEntity.Order", "Order")
                        .WithOne("OrderDetail")
                        .HasForeignKey("SSJD.Entities.StoreEntity.OrderDetail", "OrderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SSJD.Entities.StoreEntity.Promotion", "Promotion")
                        .WithOne("OrderDetail")
                        .HasForeignKey("SSJD.Entities.StoreEntity.OrderDetail", "PromotionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Product", b =>
                {
                    b.HasOne("SSJD.Entities.StoreEntity.Category", "Category")
                        .WithOne("Product")
                        .HasForeignKey("SSJD.Entities.StoreEntity.Product", "CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.ProductDetail", b =>
                {
                    b.HasOne("SSJD.Entities.StoreEntity.Product", "Product")
                        .WithOne("ProductDetail")
                        .HasForeignKey("SSJD.Entities.StoreEntity.ProductDetail", "ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Employee", b =>
                {
                    b.Navigation("Contract");
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Level", b =>
                {
                    b.Navigation("Contract")
                        .IsRequired();

                    b.Navigation("Employee")
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SSJD.Entities.EmployeeEntity.Position", b =>
                {
                    b.Navigation("Contract")
                        .IsRequired();

                    b.Navigation("Employee")
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SSJD.Entities.GeneralEnity.Account", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("SSJD.Entities.GeneralEntity.Role", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Category", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.MemberCard", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Order", b =>
                {
                    b.Navigation("OrderDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Product", b =>
                {
                    b.Navigation("ProductDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.Promotion", b =>
                {
                    b.Navigation("OrderDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("SSJD.Entities.StoreEntity.UnitShip", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
